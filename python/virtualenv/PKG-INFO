Metadata-Version: 1.1
Name: virtualenv
Version: 14.0.1
Summary: Virtual Python Environment builder
Home-page: https://virtualenv.pypa.io/
Author: Jannis Leidel, Carl Meyer and Brian Rosner
Author-email: python-virtualenv@groups.google.com
License: MIT
Description: Virtualenv
        ==========
        
        `Mailing list <http://groups.google.com/group/python-virtualenv>`_ |
        `Issues <https://github.com/pypa/virtualenv/issues>`_ |
        `Github <https://github.com/pypa/virtualenv>`_ |
        `PyPI <https://pypi.python.org/pypi/virtualenv/>`_ |
        User IRC: #pypa
        Dev IRC: #pypa-dev
        
        Introduction
        ------------
        
        ``virtualenv`` is a tool to create isolated Python environments.
        
        The basic problem being addressed is one of dependencies and versions,
        and indirectly permissions. Imagine you have an application that
        needs version 1 of LibFoo, but another application requires version
        2. How can you use both these applications?  If you install
        everything into ``/usr/lib/python2.7/site-packages`` (or whatever your
        platform's standard location is), it's easy to end up in a situation
        where you unintentionally upgrade an application that shouldn't be
        upgraded.
        
        Or more generally, what if you want to install an application *and
        leave it be*?  If an application works, any change in its libraries or
        the versions of those libraries can break the application.
        
        Also, what if you can't install packages into the global
        ``site-packages`` directory?  For instance, on a shared host.
        
        In all these cases, ``virtualenv`` can help you. It creates an
        environment that has its own installation directories, that doesn't
        share libraries with other virtualenv environments (and optionally
        doesn't access the globally installed libraries either).
        
        .. comment: 
        
        Release History
        ===============
        
        14.0.1 (2016-01-21)
        -------------------
        
        * Upgrade from pip 8.0.0 to 8.0.2.
        
        * Fix the default of ``--(no-)download`` to default to downloading.
        
        
        14.0.0 (2016-01-19)
        -------------------
        
        * **BACKWARDS INCOMPATIBLE** Drop support for Python 3.2.
        
        * Upgrade setuptools to 19.4
        
        * Upgrade wheel to 0.26.0
        
        * Upgrade pip to 8.0.0
        
        * Upgrade argparse to 1.4.0
        
        * Added support for ``python-config`` script (PR #798)
        
        * Updated activate.fish (PR #589) (PR #799)
        
        * Account for a ``site.pyo`` correctly in some python implementations (PR #759)
        
        * Properly restore an empty PS1 (#407)
        
        * Properly remove ``pydoc`` when deactivating
        
        * Remove workaround for very old Mageia / Mandriva linuxes (PR #472)
        
        * Added a space after virtualenv name in the prompt: ``(env) $PS1``
        
        * Make sure not to run a --user install when creating the virtualenv (PR #803)
        
        * Remove virtualenv file's path from directory when executing with a new
          python. Fixes issue #779, #763 (PR #805)
        
        * Remove use of () in .bat files so ``Program Files (x86)`` works #35
        
        * Download new releases of the preinstalled software from PyPI when there are
          new releases available. This behavior can be disabled using
          ``--no-download``.
        
        * Make ``--no-setuptools``, ``--no-pip``, and ``--no-wheel`` independent of
          each other.
        
        
        `Full Changelog <https://virtualenv.pypa.io/en/latest/changes.html>`_.
Keywords: setuptools deployment installation distutils
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.1
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
