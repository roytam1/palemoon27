diff --git a/media/libstagefright/binding/mp4parse/byteorder/mod.rs b/media/libstagefright/binding/mp4parse/byteorder/mod.rs
index 7eea1e3..8a108cf 100644
--- a/media/libstagefright/binding/mp4parse/byteorder/mod.rs
+++ b/media/libstagefright/binding/mp4parse/byteorder/mod.rs
@@ -36,7 +36,6 @@ assert_eq!(wtr, vec![5, 2, 0, 3]);
 ```
 */
 
-#![crate_name = "byteorder"]
 #![doc(html_root_url = "http://burntsushi.net/rustdoc/byteorder")]
 
 #![deny(missing_docs)]
@@ -45,10 +44,11 @@ use std::mem::transmute;
 use std::ptr::copy_nonoverlapping;
 
 #[cfg(not(feature = "no-std"))]
-pub use new::{ReadBytesExt, WriteBytesExt, Error, Result};
+pub use byteorder::new::{ReadBytesExt, WriteBytesExt, Error, Result};
 
 #[cfg(not(feature = "no-std"))]
-mod new;
+// Re-export new so gecko can build us as a mod intead of a crate.
+pub mod new;
 
 #[inline]
 fn extend_sign(val: u64, nbytes: usize) -> i64 {
diff --git a/media/libstagefright/binding/mp4parse/byteorder/new.rs b/media/libstagefright/binding/mp4parse/byteorder/new.rs
index 54ee6a7..4efcbc3 100644
--- a/media/libstagefright/binding/mp4parse/byteorder/new.rs
+++ b/media/libstagefright/binding/mp4parse/byteorder/new.rs
@@ -3,7 +3,7 @@ use std::fmt;
 use std::io;
 use std::result;
 
-use ByteOrder;
+use byteorder::ByteOrder;
 
 /// A short-hand for `result::Result<T, byteorder::Error>`.
 pub type Result<T> = result::Result<T, Error>;
